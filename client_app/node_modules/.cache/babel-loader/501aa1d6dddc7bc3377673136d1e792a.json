{"ast":null,"code":"var _jsxFileName = \"D:\\\\CNWEB\\\\QLNH\\\\client_app\\\\src\\\\AdminPage\\\\Component\\\\TableComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport { Excel } from \"antd-table-saveas-excel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableComponent = props => {\n  _s();\n\n  const {\n    handleDeleteMany,\n    selectionType = \"checkbox\",\n    data = [],\n    isLoading = false,\n    columns = []\n  } = props;\n  const [rowSelectedKeys, setRowSelectedKeys] = useState([]);\n  const newColumnExport = useMemo(() => {\n    const filter = columns === null || columns === void 0 ? void 0 : columns.filter(col => col.dataIndex != \"action\");\n    return filter;\n  }, [columns]);\n  console.log(\"newColumnExport\", newColumnExport); // rowSelection object indicates the need for row selection\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setRowSelectedKeys(selectedRowKeys);\n    }\n  };\n\n  const handleDeleteAll = () => {\n    handleDeleteMany(rowSelectedKeys);\n  };\n\n  const exportExcel = () => {\n    const excel = new Excel();\n    excel.addSheet(\"test\").addColumns(newColumnExport).addDataSource(data, {\n      str2Percent: true\n    }).saveAs(\"Excel.xlsx\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [rowSelectedKeys.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        padding: \"10px\",\n        cursor: \"pointer\"\n      },\n      onClick: handleDeleteAll,\n      children: \"Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportExcel,\n      children: \"Export Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: {\n        type: selectionType,\n        ...rowSelection\n      },\n      columns: columns,\n      dataSource: data,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TableComponent, \"xabnKNRDJayJgV8ue1X8dXuf7yc=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["D:/CNWEB/QLNH/client_app/src/AdminPage/Component/TableComponent.jsx"],"names":["Table","React","useMemo","useState","Excel","TableComponent","props","handleDeleteMany","selectionType","data","isLoading","columns","rowSelectedKeys","setRowSelectedKeys","newColumnExport","filter","col","dataIndex","console","log","rowSelection","onChange","selectedRowKeys","selectedRows","handleDeleteAll","exportExcel","excel","addSheet","addColumns","addDataSource","str2Percent","saveAs","length","color","fontWeight","padding","cursor","type"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,yBAAtB;;;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AACJC,IAAAA,gBADI;AAEJC,IAAAA,aAAa,GAAG,UAFZ;AAGJC,IAAAA,IAAI,GAAG,EAHH;AAIJC,IAAAA,SAAS,GAAG,KAJR;AAKJC,IAAAA,OAAO,GAAG;AALN,MAMFL,KANJ;AAQA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMW,eAAe,GAAGZ,OAAO,CAAC,MAAM;AACpC,UAAMa,MAAM,GAAGJ,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEI,MAAT,CAAiBC,GAAD,IAASA,GAAG,CAACC,SAAJ,IAAiB,QAA1C,CAAf;AACA,WAAOF,MAAP;AACD,GAH8B,EAG5B,CAACJ,OAAD,CAH4B,CAA/B;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,eAA/B,EAdgC,CAehC;;AACA,QAAMM,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AAC3CV,MAAAA,kBAAkB,CAACS,eAAD,CAAlB;AACD;AAHkB,GAArB;;AAKA,QAAME,eAAe,GAAG,MAAM;AAC5BjB,IAAAA,gBAAgB,CAACK,eAAD,CAAhB;AACD,GAFD;;AAIA,QAAMa,WAAW,GAAG,MAAM;AACxB,UAAMC,KAAK,GAAG,IAAItB,KAAJ,EAAd;AACAsB,IAAAA,KAAK,CACFC,QADH,CACY,MADZ,EAEGC,UAFH,CAEcd,eAFd,EAGGe,aAHH,CAGiBpB,IAHjB,EAGuB;AACnBqB,MAAAA,WAAW,EAAE;AADM,KAHvB,EAMGC,MANH,CAMU,YANV;AAOD,GATD;;AAUA,sBACE;AAAA,eACGnB,eAAe,CAACoB,MAAhB,GAAyB,CAAzB,iBACC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,UAAU,EAAE,MAFP;AAGLC,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,MAAM,EAAE;AAJH,OADT;AAOE,MAAA,OAAO,EAAEZ,eAPX;AAAA,gBAQC;AARD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcE;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA,gBAA8B;AAA9B;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,KAAD;AACE,MAAA,YAAY,EAAE;AACZY,QAAAA,IAAI,EAAE7B,aADM;AAEZ,WAAGY;AAFS,OADhB;AAKE,MAAA,OAAO,EAAET,OALX;AAME,MAAA,UAAU,EAAEF,IANd;AAAA,SAOMH;AAPN;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AA2BD,CA9DD;;GAAMD,c;;KAAAA,c;AAgEN,eAAeA,cAAf","sourcesContent":["import { Table } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport { Excel } from \"antd-table-saveas-excel\";\nconst TableComponent = (props) => {\n  const {\n    handleDeleteMany,\n    selectionType = \"checkbox\",\n    data = [],\n    isLoading = false,\n    columns = [],\n  } = props;\n\n  const [rowSelectedKeys, setRowSelectedKeys] = useState([]);\n  const newColumnExport = useMemo(() => {\n    const filter = columns?.filter((col) => col.dataIndex != \"action\");\n    return filter;\n  }, [columns]);\n  console.log(\"newColumnExport\", newColumnExport);\n  // rowSelection object indicates the need for row selection\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setRowSelectedKeys(selectedRowKeys);\n    },\n  };\n  const handleDeleteAll = () => {\n    handleDeleteMany(rowSelectedKeys);\n  };\n\n  const exportExcel = () => {\n    const excel = new Excel();\n    excel\n      .addSheet(\"test\")\n      .addColumns(newColumnExport)\n      .addDataSource(data, {\n        str2Percent: true,\n      })\n      .saveAs(\"Excel.xlsx\");\n  };\n  return (\n    <>\n      {rowSelectedKeys.length > 0 && (\n        <div\n          style={{\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            padding: \"10px\",\n            cursor: \"pointer\",\n          }}\n          onClick={handleDeleteAll}\n        >\n          Delete All\n        </div>\n      )}\n      <button onClick={exportExcel}>Export Excel</button>\n      <Table\n        rowSelection={{\n          type: selectionType,\n          ...rowSelection,\n        }}\n        columns={columns}\n        dataSource={data}\n        {...props}\n      />\n    </>\n  );\n};\n\nexport default TableComponent;\n"]},"metadata":{},"sourceType":"module"}