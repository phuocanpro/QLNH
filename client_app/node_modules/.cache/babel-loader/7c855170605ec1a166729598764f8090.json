{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { memo, useCallback, useContext, useEffect } from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport FileTextOutlined from \"@ant-design/icons/es/icons/FileTextOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport { FloatButtonGroupProvider } from './context';\nimport FloatButton, { floatButtonPrefixCls } from './FloatButton';\nimport useStyle from './style';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\n\nconst FloatButtonGroup = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    shape = 'circle',\n    type = 'default',\n    icon = /*#__PURE__*/React.createElement(FileTextOutlined, null),\n    closeIcon = /*#__PURE__*/React.createElement(CloseOutlined, null),\n    description,\n    trigger,\n    children,\n    onOpenChange,\n    open: customOpen\n  } = props,\n        floatButtonProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"shape\", \"type\", \"icon\", \"closeIcon\", \"description\", \"trigger\", \"children\", \"onOpenChange\", \"open\"]);\n\n  const {\n    direction,\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const groupCls = classNames(groupPrefixCls, hashId, cssVarCls, rootCls, className, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl',\n    [`${groupPrefixCls}-${shape}`]: shape,\n    [`${groupPrefixCls}-${shape}-shadow`]: !trigger\n  });\n  const wrapperCls = classNames(hashId, `${groupPrefixCls}-wrap`);\n  const [open, setOpen] = useMergedState(false, {\n    value: customOpen\n  });\n  const floatButtonGroupRef = React.useRef(null);\n  const floatButtonRef = React.useRef(null);\n  const hoverAction = React.useMemo(() => {\n    const hoverTypeAction = {\n      onMouseEnter() {\n        setOpen(true);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(true);\n      },\n\n      onMouseLeave() {\n        setOpen(false);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n      }\n\n    };\n    return trigger === 'hover' ? hoverTypeAction : {};\n  }, [trigger]);\n\n  const handleOpenChange = () => {\n    setOpen(prevState => {\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(!prevState);\n      return !prevState;\n    });\n  };\n\n  const onClick = useCallback(e => {\n    var _a, _b;\n\n    if ((_a = floatButtonGroupRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target)) {\n      if ((_b = floatButtonRef.current) === null || _b === void 0 ? void 0 : _b.contains(e.target)) {\n        handleOpenChange();\n      }\n\n      return;\n    }\n\n    setOpen(false);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n  }, [trigger]);\n  useEffect(() => {\n    if (trigger === 'click') {\n      document.addEventListener('click', onClick);\n      return () => {\n        document.removeEventListener('click', onClick);\n      };\n    }\n  }, [trigger]); // =================== Warning =====================\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('FloatButton.Group');\n    process.env.NODE_ENV !== \"production\" ? warning(!('open' in props) || !!trigger, 'usage', '`open` need to be used together with `trigger`') : void 0;\n  }\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(FloatButtonGroupProvider, {\n    value: shape\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: floatButtonGroupRef,\n    className: groupCls,\n    style: style\n  }, hoverAction), trigger && ['click', 'hover'].includes(trigger) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: open,\n    motionName: `${groupPrefixCls}-wrap`\n  }, _ref => {\n    let {\n      className: motionClassName\n    } = _ref;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(motionClassName, wrapperCls)\n    }, children);\n  }), /*#__PURE__*/React.createElement(FloatButton, Object.assign({\n    ref: floatButtonRef,\n    type: type,\n    shape: shape,\n    icon: open ? closeIcon : icon,\n    description: description,\n    \"aria-label\": props['aria-label']\n  }, floatButtonProps))) : children)));\n};\n\nexport default /*#__PURE__*/memo(FloatButtonGroup);","map":{"version":3,"sources":["D:/CNWEB/QLNH/client_app/node_modules/antd/es/float-button/FloatButtonGroup.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","memo","useCallback","useContext","useEffect","CloseOutlined","FileTextOutlined","classNames","CSSMotion","useMergedState","devUseWarning","ConfigContext","FloatButtonGroupProvider","FloatButton","floatButtonPrefixCls","useStyle","useCSSVarCls","FloatButtonGroup","props","prefixCls","customizePrefixCls","className","style","shape","type","icon","createElement","closeIcon","description","trigger","children","onOpenChange","open","customOpen","floatButtonProps","direction","getPrefixCls","rootCls","wrapCSSVar","hashId","cssVarCls","groupPrefixCls","groupCls","wrapperCls","setOpen","value","floatButtonGroupRef","useRef","floatButtonRef","hoverAction","useMemo","hoverTypeAction","onMouseEnter","onMouseLeave","handleOpenChange","prevState","onClick","_a","_b","current","contains","target","document","addEventListener","removeEventListener","process","env","NODE_ENV","warning","assign","ref","includes","Fragment","visible","motionName","_ref","motionClassName"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAT,IAAcH,CAAd,EAAiB,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EAAoED,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;;AACrF,MAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EAAqE,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;AAC3I,QAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EAAgFR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;AACjF;AACD,SAAOR,CAAP;AACD,CAPD;;AAQA,OAAOW,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,wBAAT,QAAyC,WAAzC;AACA,OAAOC,WAAP,IAAsBC,oBAAtB,QAAkD,eAAlD;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAM;AACFC,IAAAA,SAAS,EAAEC,kBADT;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,KAAK,GAAG,QAJN;AAKFC,IAAAA,IAAI,GAAG,SALL;AAMFC,IAAAA,IAAI,GAAG,aAAazB,KAAK,CAAC0B,aAAN,CAAoBpB,gBAApB,EAAsC,IAAtC,CANlB;AAOFqB,IAAAA,SAAS,GAAG,aAAa3B,KAAK,CAAC0B,aAAN,CAAoBrB,aAApB,EAAmC,IAAnC,CAPvB;AAQFuB,IAAAA,WARE;AASFC,IAAAA,OATE;AAUFC,IAAAA,QAVE;AAWFC,IAAAA,YAXE;AAYFC,IAAAA,IAAI,EAAEC;AAZJ,MAaAf,KAbN;AAAA,QAcEgB,gBAAgB,GAAGhD,MAAM,CAACgC,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,MAA7C,EAAqD,MAArD,EAA6D,WAA7D,EAA0E,aAA1E,EAAyF,SAAzF,EAAoG,UAApG,EAAgH,cAAhH,EAAgI,MAAhI,CAAR,CAd3B;;AAeA,QAAM;AACJiB,IAAAA,SADI;AAEJC,IAAAA;AAFI,MAGFjC,UAAU,CAACQ,aAAD,CAHd;AAIA,QAAMQ,SAAS,GAAGiB,YAAY,CAACtB,oBAAD,EAAuBM,kBAAvB,CAA9B;AACA,QAAMiB,OAAO,GAAGrB,YAAY,CAACG,SAAD,CAA5B;AACA,QAAM,CAACmB,UAAD,EAAaC,MAAb,EAAqBC,SAArB,IAAkCzB,QAAQ,CAACI,SAAD,EAAYkB,OAAZ,CAAhD;AACA,QAAMI,cAAc,GAAI,GAAEtB,SAAU,QAApC;AACA,QAAMuB,QAAQ,GAAGnC,UAAU,CAACkC,cAAD,EAAiBF,MAAjB,EAAyBC,SAAzB,EAAoCH,OAApC,EAA6ChB,SAA7C,EAAwD;AACjF,KAAE,GAAEoB,cAAe,MAAnB,GAA2BN,SAAS,KAAK,KADwC;AAEjF,KAAE,GAAEM,cAAe,IAAGlB,KAAM,EAA5B,GAAgCA,KAFiD;AAGjF,KAAE,GAAEkB,cAAe,IAAGlB,KAAM,SAA5B,GAAuC,CAACM;AAHyC,GAAxD,CAA3B;AAKA,QAAMc,UAAU,GAAGpC,UAAU,CAACgC,MAAD,EAAU,GAAEE,cAAe,OAA3B,CAA7B;AACA,QAAM,CAACT,IAAD,EAAOY,OAAP,IAAkBnC,cAAc,CAAC,KAAD,EAAQ;AAC5CoC,IAAAA,KAAK,EAAEZ;AADqC,GAAR,CAAtC;AAGA,QAAMa,mBAAmB,GAAG9C,KAAK,CAAC+C,MAAN,CAAa,IAAb,CAA5B;AACA,QAAMC,cAAc,GAAGhD,KAAK,CAAC+C,MAAN,CAAa,IAAb,CAAvB;AACA,QAAME,WAAW,GAAGjD,KAAK,CAACkD,OAAN,CAAc,MAAM;AACtC,UAAMC,eAAe,GAAG;AACtBC,MAAAA,YAAY,GAAG;AACbR,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAb,QAAAA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAAC,IAAD,CAAxE;AACD,OAJqB;;AAKtBsB,MAAAA,YAAY,GAAG;AACbT,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAb,QAAAA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAAC,KAAD,CAAxE;AACD;;AARqB,KAAxB;AAUA,WAAOF,OAAO,KAAK,OAAZ,GAAsBsB,eAAtB,GAAwC,EAA/C;AACD,GAZmB,EAYjB,CAACtB,OAAD,CAZiB,CAApB;;AAaA,QAAMyB,gBAAgB,GAAG,MAAM;AAC7BV,IAAAA,OAAO,CAACW,SAAS,IAAI;AACnBxB,MAAAA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAAC,CAACwB,SAAF,CAAxE;AACA,aAAO,CAACA,SAAR;AACD,KAHM,CAAP;AAID,GALD;;AAMA,QAAMC,OAAO,GAAGtD,WAAW,CAACd,CAAC,IAAI;AAC/B,QAAIqE,EAAJ,EAAQC,EAAR;;AACA,QAAI,CAACD,EAAE,GAAGX,mBAAmB,CAACa,OAA1B,MAAuC,IAAvC,IAA+CF,EAAE,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,EAAE,CAACG,QAAH,CAAYxE,CAAC,CAACyE,MAAd,CAA5E,EAAmG;AACjG,UAAI,CAACH,EAAE,GAAGV,cAAc,CAACW,OAArB,MAAkC,IAAlC,IAA0CD,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,EAAE,CAACE,QAAH,CAAYxE,CAAC,CAACyE,MAAd,CAAvE,EAA8F;AAC5FP,QAAAA,gBAAgB;AACjB;;AACD;AACD;;AACDV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAb,IAAAA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAAC,KAAD,CAAxE;AACD,GAV0B,EAUxB,CAACF,OAAD,CAVwB,CAA3B;AAWAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,OAAO,KAAK,OAAhB,EAAyB;AACvBiC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCP,OAAnC;AACA,aAAO,MAAM;AACXM,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCR,OAAtC;AACD,OAFD;AAGD;AACF,GAPQ,EAON,CAAC3B,OAAD,CAPM,CAAT,CAjEgC,CAyEhC;;AACA,MAAIoC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAMC,OAAO,GAAG1D,aAAa,CAAC,mBAAD,CAA7B;AACAuD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCC,OAAO,CAAC,EAAE,UAAUlD,KAAZ,KAAsB,CAAC,CAACW,OAAzB,EAAkC,OAAlC,EAA2C,gDAA3C,CAA/C,GAA8I,KAAK,CAAnJ;AACD;;AACD,SAAOS,UAAU,EAAE,aAAatC,KAAK,CAAC0B,aAAN,CAAoBd,wBAApB,EAA8C;AAC5EiC,IAAAA,KAAK,EAAEtB;AADqE,GAA9C,EAE7B,aAAavB,KAAK,CAAC0B,aAAN,CAAoB,KAApB,EAA2BnC,MAAM,CAAC8E,MAAP,CAAc;AACvDC,IAAAA,GAAG,EAAExB,mBADkD;AAEvDzB,IAAAA,SAAS,EAAEqB,QAF4C;AAGvDpB,IAAAA,KAAK,EAAEA;AAHgD,GAAd,EAIxC2B,WAJwC,CAA3B,EAICpB,OAAO,IAAI,CAAC,OAAD,EAAU,OAAV,EAAmB0C,QAAnB,CAA4B1C,OAA5B,CAAX,GAAoD,aAAa7B,KAAK,CAAC0B,aAAN,CAAoB1B,KAAK,CAACwE,QAA1B,EAAoC,IAApC,EAA0C,aAAaxE,KAAK,CAAC0B,aAAN,CAAoBlB,SAApB,EAA+B;AACtKiE,IAAAA,OAAO,EAAEzC,IAD6J;AAEtK0C,IAAAA,UAAU,EAAG,GAAEjC,cAAe;AAFwI,GAA/B,EAGtIkC,IAAI,IAAI;AACT,QAAI;AACFtD,MAAAA,SAAS,EAAEuD;AADT,QAEAD,IAFJ;AAGA,WAAO,aAAa3E,KAAK,CAAC0B,aAAN,CAAoB,KAApB,EAA2B;AAC7CL,MAAAA,SAAS,EAAEd,UAAU,CAACqE,eAAD,EAAkBjC,UAAlB;AADwB,KAA3B,EAEjBb,QAFiB,CAApB;AAGD,GAVwI,CAAvD,EAU9E,aAAa9B,KAAK,CAAC0B,aAAN,CAAoBb,WAApB,EAAiCtB,MAAM,CAAC8E,MAAP,CAAc;AAC9DC,IAAAA,GAAG,EAAEtB,cADyD;AAE9DxB,IAAAA,IAAI,EAAEA,IAFwD;AAG9DD,IAAAA,KAAK,EAAEA,KAHuD;AAI9DE,IAAAA,IAAI,EAAEO,IAAI,GAAGL,SAAH,GAAeF,IAJqC;AAK9DG,IAAAA,WAAW,EAAEA,WALiD;AAM9D,kBAAcV,KAAK,CAAC,YAAD;AAN2C,GAAd,EAO/CgB,gBAP+C,CAAjC,CAViE,CAAjE,GAiBSJ,QArBV,CAFgB,CAAf,CAAjB;AAwBD,CAtGD;;AAuGA,eAAe,aAAa7B,IAAI,CAACgB,gBAAD,CAAhC","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { memo, useCallback, useContext, useEffect } from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport FileTextOutlined from \"@ant-design/icons/es/icons/FileTextOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport { FloatButtonGroupProvider } from './context';\nimport FloatButton, { floatButtonPrefixCls } from './FloatButton';\nimport useStyle from './style';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nconst FloatButtonGroup = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      shape = 'circle',\n      type = 'default',\n      icon = /*#__PURE__*/React.createElement(FileTextOutlined, null),\n      closeIcon = /*#__PURE__*/React.createElement(CloseOutlined, null),\n      description,\n      trigger,\n      children,\n      onOpenChange,\n      open: customOpen\n    } = props,\n    floatButtonProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"shape\", \"type\", \"icon\", \"closeIcon\", \"description\", \"trigger\", \"children\", \"onOpenChange\", \"open\"]);\n  const {\n    direction,\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const groupCls = classNames(groupPrefixCls, hashId, cssVarCls, rootCls, className, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl',\n    [`${groupPrefixCls}-${shape}`]: shape,\n    [`${groupPrefixCls}-${shape}-shadow`]: !trigger\n  });\n  const wrapperCls = classNames(hashId, `${groupPrefixCls}-wrap`);\n  const [open, setOpen] = useMergedState(false, {\n    value: customOpen\n  });\n  const floatButtonGroupRef = React.useRef(null);\n  const floatButtonRef = React.useRef(null);\n  const hoverAction = React.useMemo(() => {\n    const hoverTypeAction = {\n      onMouseEnter() {\n        setOpen(true);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(true);\n      },\n      onMouseLeave() {\n        setOpen(false);\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n      }\n    };\n    return trigger === 'hover' ? hoverTypeAction : {};\n  }, [trigger]);\n  const handleOpenChange = () => {\n    setOpen(prevState => {\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(!prevState);\n      return !prevState;\n    });\n  };\n  const onClick = useCallback(e => {\n    var _a, _b;\n    if ((_a = floatButtonGroupRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target)) {\n      if ((_b = floatButtonRef.current) === null || _b === void 0 ? void 0 : _b.contains(e.target)) {\n        handleOpenChange();\n      }\n      return;\n    }\n    setOpen(false);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(false);\n  }, [trigger]);\n  useEffect(() => {\n    if (trigger === 'click') {\n      document.addEventListener('click', onClick);\n      return () => {\n        document.removeEventListener('click', onClick);\n      };\n    }\n  }, [trigger]);\n  // =================== Warning =====================\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('FloatButton.Group');\n    process.env.NODE_ENV !== \"production\" ? warning(!('open' in props) || !!trigger, 'usage', '`open` need to be used together with `trigger`') : void 0;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(FloatButtonGroupProvider, {\n    value: shape\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: floatButtonGroupRef,\n    className: groupCls,\n    style: style\n  }, hoverAction), trigger && ['click', 'hover'].includes(trigger) ? ( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: open,\n    motionName: `${groupPrefixCls}-wrap`\n  }, _ref => {\n    let {\n      className: motionClassName\n    } = _ref;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(motionClassName, wrapperCls)\n    }, children);\n  }), /*#__PURE__*/React.createElement(FloatButton, Object.assign({\n    ref: floatButtonRef,\n    type: type,\n    shape: shape,\n    icon: open ? closeIcon : icon,\n    description: description,\n    \"aria-label\": props['aria-label']\n  }, floatButtonProps)))) : children)));\n};\nexport default /*#__PURE__*/memo(FloatButtonGroup);"]},"metadata":{},"sourceType":"module"}