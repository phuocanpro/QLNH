{"ast":null,"code":"import { blue } from '@ant-design/colors';\nimport { clearFix, textEllipsis } from '../../style';\nimport { unit } from '@ant-design/cssinjs';\n\nconst genPictureStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    uploadThumbnailSize,\n    uploadProgressOffset,\n    calc\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ${listCls} 增加优先级\n      [`\n        ${listCls}${listCls}-picture,\n        ${listCls}${listCls}-picture-card,\n        ${listCls}${listCls}-picture-circle\n      `]: {\n        [itemCls]: {\n          position: 'relative',\n          height: calc(uploadThumbnailSize).add(calc(token.lineWidth).mul(2)).add(calc(token.paddingXS).mul(2)).equal(),\n          padding: token.paddingXS,\n          border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,\n          borderRadius: token.borderRadiusLG,\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`${itemCls}-thumbnail`]: Object.assign(Object.assign({}, textEllipsis), {\n            width: uploadThumbnailSize,\n            height: uploadThumbnailSize,\n            lineHeight: unit(calc(uploadThumbnailSize).add(token.paddingSM).equal()),\n            textAlign: 'center',\n            flex: 'none',\n            [iconCls]: {\n              fontSize: token.fontSizeHeading2,\n              color: token.colorPrimary\n            },\n            img: {\n              display: 'block',\n              width: '100%',\n              height: '100%',\n              overflow: 'hidden'\n            }\n          }),\n          [`${itemCls}-progress`]: {\n            bottom: uploadProgressOffset,\n            width: `calc(100% - ${unit(calc(token.paddingSM).mul(2).equal())})`,\n            marginTop: 0,\n            paddingInlineStart: calc(uploadThumbnailSize).add(token.paddingXS).equal()\n          }\n        },\n        [`${itemCls}-error`]: {\n          borderColor: token.colorError,\n          // Adjust the color of the error icon : https://github.com/ant-design/ant-design/pull/24160\n          [`${itemCls}-thumbnail ${iconCls}`]: {\n            [`svg path[fill='${blue[0]}']`]: {\n              fill: token.colorErrorBg\n            },\n            [`svg path[fill='${blue.primary}']`]: {\n              fill: token.colorError\n            }\n          }\n        },\n        [`${itemCls}-uploading`]: {\n          borderStyle: 'dashed',\n          [`${itemCls}-name`]: {\n            marginBottom: uploadProgressOffset\n          }\n        }\n      },\n      [`${listCls}${listCls}-picture-circle ${itemCls}`]: {\n        [`&, &::before, ${itemCls}-thumbnail`]: {\n          borderRadius: '50%'\n        }\n      }\n    }\n  };\n};\n\nconst genPictureCardStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontSizeLG,\n    colorTextLightSolid,\n    calc\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  const uploadPictureCardSize = token.uploadPicCardSize;\n  return {\n    [`\n      ${componentCls}-wrapper${componentCls}-picture-card-wrapper,\n      ${componentCls}-wrapper${componentCls}-picture-circle-wrapper\n    `]: Object.assign(Object.assign({}, clearFix()), {\n      display: 'inline-block',\n      width: '100%',\n      [`${componentCls}${componentCls}-select`]: {\n        width: uploadPictureCardSize,\n        height: uploadPictureCardSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS,\n        textAlign: 'center',\n        verticalAlign: 'top',\n        backgroundColor: token.colorFillAlter,\n        border: `${unit(token.lineWidth)} dashed ${token.colorBorder}`,\n        borderRadius: token.borderRadiusLG,\n        cursor: 'pointer',\n        transition: `border-color ${token.motionDurationSlow}`,\n        [`> ${componentCls}`]: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          textAlign: 'center'\n        },\n        [`&:not(${componentCls}-disabled):hover`]: {\n          borderColor: token.colorPrimary\n        }\n      },\n      // list\n      [`${listCls}${listCls}-picture-card, ${listCls}${listCls}-picture-circle`]: {\n        [`${listCls}-item-container`]: {\n          display: 'inline-block',\n          width: uploadPictureCardSize,\n          height: uploadPictureCardSize,\n          marginBlock: `0 ${unit(token.marginXS)}`,\n          marginInline: `0 ${unit(token.marginXS)}`,\n          verticalAlign: 'top'\n        },\n        '&::after': {\n          display: 'none'\n        },\n        [itemCls]: {\n          height: '100%',\n          margin: 0,\n          '&::before': {\n            position: 'absolute',\n            zIndex: 1,\n            width: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`,\n            height: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`,\n            backgroundColor: token.colorBgMask,\n            opacity: 0,\n            transition: `all ${token.motionDurationSlow}`,\n            content: '\" \"'\n          }\n        },\n        [`${itemCls}:hover`]: {\n          [`&::before, ${itemCls}-actions`]: {\n            opacity: 1\n          }\n        },\n        [`${itemCls}-actions`]: {\n          position: 'absolute',\n          insetInlineStart: 0,\n          zIndex: 10,\n          width: '100%',\n          whiteSpace: 'nowrap',\n          textAlign: 'center',\n          opacity: 0,\n          transition: `all ${token.motionDurationSlow}`,\n          [`\n            ${iconCls}-eye,\n            ${iconCls}-download,\n            ${iconCls}-delete\n          `]: {\n            zIndex: 10,\n            width: fontSizeLG,\n            margin: `0 ${unit(token.marginXXS)}`,\n            fontSize: fontSizeLG,\n            cursor: 'pointer',\n            transition: `all ${token.motionDurationSlow}`,\n            color: colorTextLightSolid,\n            '&:hover': {\n              color: colorTextLightSolid\n            },\n            svg: {\n              verticalAlign: 'baseline'\n            }\n          }\n        },\n        [`${itemCls}-thumbnail, ${itemCls}-thumbnail img`]: {\n          position: 'static',\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        [`${itemCls}-name`]: {\n          display: 'none',\n          textAlign: 'center'\n        },\n        [`${itemCls}-file + ${itemCls}-name`]: {\n          position: 'absolute',\n          bottom: token.margin,\n          display: 'block',\n          width: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`\n        },\n        [`${itemCls}-uploading`]: {\n          [`&${itemCls}`]: {\n            backgroundColor: token.colorFillAlter\n          },\n          [`&::before, ${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            display: 'none'\n          }\n        },\n        [`${itemCls}-progress`]: {\n          bottom: token.marginXL,\n          width: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`,\n          paddingInlineStart: 0\n        }\n      }\n    }),\n    [`${componentCls}-wrapper${componentCls}-picture-circle-wrapper`]: {\n      [`${componentCls}${componentCls}-select`]: {\n        borderRadius: '50%'\n      }\n    }\n  };\n};\n\nexport { genPictureStyle, genPictureCardStyle };","map":{"version":3,"sources":["D:/CNWEB/QLNH/client_app/node_modules/antd/es/upload/style/picture.js"],"names":["blue","clearFix","textEllipsis","unit","genPictureStyle","token","componentCls","iconCls","uploadThumbnailSize","uploadProgressOffset","calc","listCls","itemCls","position","height","add","lineWidth","mul","paddingXS","equal","padding","border","lineType","colorBorder","borderRadius","borderRadiusLG","background","Object","assign","width","lineHeight","paddingSM","textAlign","flex","fontSize","fontSizeHeading2","color","colorPrimary","img","display","overflow","bottom","marginTop","paddingInlineStart","borderColor","colorError","fill","colorErrorBg","primary","borderStyle","marginBottom","genPictureCardStyle","fontSizeLG","colorTextLightSolid","uploadPictureCardSize","uploadPicCardSize","marginInlineEnd","marginXS","verticalAlign","backgroundColor","colorFillAlter","cursor","transition","motionDurationSlow","alignItems","justifyContent","marginBlock","marginInline","margin","zIndex","colorBgMask","opacity","content","insetInlineStart","whiteSpace","marginXXS","svg","objectFit","marginXL"],"mappings":"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","sourcesContent":["import { blue } from '@ant-design/colors';\nimport { clearFix, textEllipsis } from '../../style';\nimport { unit } from '@ant-design/cssinjs';\nconst genPictureStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    uploadThumbnailSize,\n    uploadProgressOffset,\n    calc\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ${listCls} 增加优先级\n      [`\n        ${listCls}${listCls}-picture,\n        ${listCls}${listCls}-picture-card,\n        ${listCls}${listCls}-picture-circle\n      `]: {\n        [itemCls]: {\n          position: 'relative',\n          height: calc(uploadThumbnailSize).add(calc(token.lineWidth).mul(2)).add(calc(token.paddingXS).mul(2)).equal(),\n          padding: token.paddingXS,\n          border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,\n          borderRadius: token.borderRadiusLG,\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`${itemCls}-thumbnail`]: Object.assign(Object.assign({}, textEllipsis), {\n            width: uploadThumbnailSize,\n            height: uploadThumbnailSize,\n            lineHeight: unit(calc(uploadThumbnailSize).add(token.paddingSM).equal()),\n            textAlign: 'center',\n            flex: 'none',\n            [iconCls]: {\n              fontSize: token.fontSizeHeading2,\n              color: token.colorPrimary\n            },\n            img: {\n              display: 'block',\n              width: '100%',\n              height: '100%',\n              overflow: 'hidden'\n            }\n          }),\n          [`${itemCls}-progress`]: {\n            bottom: uploadProgressOffset,\n            width: `calc(100% - ${unit(calc(token.paddingSM).mul(2).equal())})`,\n            marginTop: 0,\n            paddingInlineStart: calc(uploadThumbnailSize).add(token.paddingXS).equal()\n          }\n        },\n        [`${itemCls}-error`]: {\n          borderColor: token.colorError,\n          // Adjust the color of the error icon : https://github.com/ant-design/ant-design/pull/24160\n          [`${itemCls}-thumbnail ${iconCls}`]: {\n            [`svg path[fill='${blue[0]}']`]: {\n              fill: token.colorErrorBg\n            },\n            [`svg path[fill='${blue.primary}']`]: {\n              fill: token.colorError\n            }\n          }\n        },\n        [`${itemCls}-uploading`]: {\n          borderStyle: 'dashed',\n          [`${itemCls}-name`]: {\n            marginBottom: uploadProgressOffset\n          }\n        }\n      },\n      [`${listCls}${listCls}-picture-circle ${itemCls}`]: {\n        [`&, &::before, ${itemCls}-thumbnail`]: {\n          borderRadius: '50%'\n        }\n      }\n    }\n  };\n};\nconst genPictureCardStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontSizeLG,\n    colorTextLightSolid,\n    calc\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  const uploadPictureCardSize = token.uploadPicCardSize;\n  return {\n    [`\n      ${componentCls}-wrapper${componentCls}-picture-card-wrapper,\n      ${componentCls}-wrapper${componentCls}-picture-circle-wrapper\n    `]: Object.assign(Object.assign({}, clearFix()), {\n      display: 'inline-block',\n      width: '100%',\n      [`${componentCls}${componentCls}-select`]: {\n        width: uploadPictureCardSize,\n        height: uploadPictureCardSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS,\n        textAlign: 'center',\n        verticalAlign: 'top',\n        backgroundColor: token.colorFillAlter,\n        border: `${unit(token.lineWidth)} dashed ${token.colorBorder}`,\n        borderRadius: token.borderRadiusLG,\n        cursor: 'pointer',\n        transition: `border-color ${token.motionDurationSlow}`,\n        [`> ${componentCls}`]: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          textAlign: 'center'\n        },\n        [`&:not(${componentCls}-disabled):hover`]: {\n          borderColor: token.colorPrimary\n        }\n      },\n      // list\n      [`${listCls}${listCls}-picture-card, ${listCls}${listCls}-picture-circle`]: {\n        [`${listCls}-item-container`]: {\n          display: 'inline-block',\n          width: uploadPictureCardSize,\n          height: uploadPictureCardSize,\n          marginBlock: `0 ${unit(token.marginXS)}`,\n          marginInline: `0 ${unit(token.marginXS)}`,\n          verticalAlign: 'top'\n        },\n        '&::after': {\n          display: 'none'\n        },\n        [itemCls]: {\n          height: '100%',\n          margin: 0,\n          '&::before': {\n            position: 'absolute',\n            zIndex: 1,\n            width: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`,\n            height: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`,\n            backgroundColor: token.colorBgMask,\n            opacity: 0,\n            transition: `all ${token.motionDurationSlow}`,\n            content: '\" \"'\n          }\n        },\n        [`${itemCls}:hover`]: {\n          [`&::before, ${itemCls}-actions`]: {\n            opacity: 1\n          }\n        },\n        [`${itemCls}-actions`]: {\n          position: 'absolute',\n          insetInlineStart: 0,\n          zIndex: 10,\n          width: '100%',\n          whiteSpace: 'nowrap',\n          textAlign: 'center',\n          opacity: 0,\n          transition: `all ${token.motionDurationSlow}`,\n          [`\n            ${iconCls}-eye,\n            ${iconCls}-download,\n            ${iconCls}-delete\n          `]: {\n            zIndex: 10,\n            width: fontSizeLG,\n            margin: `0 ${unit(token.marginXXS)}`,\n            fontSize: fontSizeLG,\n            cursor: 'pointer',\n            transition: `all ${token.motionDurationSlow}`,\n            color: colorTextLightSolid,\n            '&:hover': {\n              color: colorTextLightSolid\n            },\n            svg: {\n              verticalAlign: 'baseline'\n            }\n          }\n        },\n        [`${itemCls}-thumbnail, ${itemCls}-thumbnail img`]: {\n          position: 'static',\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        [`${itemCls}-name`]: {\n          display: 'none',\n          textAlign: 'center'\n        },\n        [`${itemCls}-file + ${itemCls}-name`]: {\n          position: 'absolute',\n          bottom: token.margin,\n          display: 'block',\n          width: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`\n        },\n        [`${itemCls}-uploading`]: {\n          [`&${itemCls}`]: {\n            backgroundColor: token.colorFillAlter\n          },\n          [`&::before, ${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            display: 'none'\n          }\n        },\n        [`${itemCls}-progress`]: {\n          bottom: token.marginXL,\n          width: `calc(100% - ${unit(calc(token.paddingXS).mul(2).equal())})`,\n          paddingInlineStart: 0\n        }\n      }\n    }),\n    [`${componentCls}-wrapper${componentCls}-picture-circle-wrapper`]: {\n      [`${componentCls}${componentCls}-select`]: {\n        borderRadius: '50%'\n      }\n    }\n  };\n};\nexport { genPictureStyle, genPictureCardStyle };"]},"metadata":{},"sourceType":"module"}