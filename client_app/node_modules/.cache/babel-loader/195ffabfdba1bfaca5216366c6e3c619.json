{"ast":null,"code":"var _jsxFileName = \"D:\\\\class\\\\cnWeb\\\\QLNH\\\\client_app\\\\src\\\\Order\\\\OrderMomo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport crypto from 'crypto';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCount } from '../Redux/Action/ActionCount';\nimport CouponAPI from '../API/CouponAPI';\nimport NoteAPI from '../API/NoteAPI';\nimport OrderAPI from '../API/OrderAPI';\nimport Detail_OrderAPI from '../API/Detail_OrderAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderMomo(props) {\n  _s();\n\n  const {\n    search\n  } = window.location;\n  const [note, setNote] = useState('');\n  const count_change = useSelector(state => state.Count.isLoad);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const information = JSON.parse(localStorage.getItem('information'));\n    const total = localStorage.getItem('total_price');\n    const price = localStorage.getItem('price');\n\n    const fetchData = async () => {\n      const serectkey = \"uLb683H8g9dWuiyipZbLHgO6zjSDlVm5\";\n      const accessKey = new URLSearchParams(search).get('accessKey');\n      const amount = new URLSearchParams(search).get('amount');\n      const extraData = new URLSearchParams(search).get('extraData');\n      const errorCode = new URLSearchParams(search).get('errorCode');\n      const localMessage = new URLSearchParams(search).get('localMessage');\n      const message = new URLSearchParams(search).get('message');\n      const orderId = new URLSearchParams(search).get('orderId');\n      const orderInfo = new URLSearchParams(search).get('orderInfo');\n      const orderType = new URLSearchParams(search).get('orderType');\n      const partnerCode = new URLSearchParams(search).get('partnerCode');\n      const payType = new URLSearchParams(search).get('payType');\n      const requestId = new URLSearchParams(search).get('requestId');\n      const responseTime = new URLSearchParams(search).get('responseTime');\n      const transId = new URLSearchParams(search).get('transId');\n      let param = `partnerCode=${partnerCode}&accessKey=${accessKey}&requestId=${requestId}&amount=${amount}&orderId=${orderId}&orderInfo=${orderInfo}&orderType=${orderType}&transId=${transId}&message=${message}&localMessage=${localMessage}&responseTime=${responseTime}&errorCode=${errorCode}&payType=${payType}&extraData=${extraData}`;\n      var signature = crypto.createHmac('sha256', serectkey).update(param).digest('hex');\n\n      if (new URLSearchParams(search).get('signature') !== signature) {\n        setNote(\"Information Request Invalid\");\n        return;\n      }\n\n      if (errorCode == 0) {\n        if (!information) {\n          window.location.href = '/';\n          return;\n        }\n\n        if (localStorage.getItem(\"id_coupon\")) {\n          const responseUpdate = await CouponAPI.updateCoupon(localStorage.getItem(\"id_coupon\"));\n          console.log(responseUpdate);\n        } // data Note\n\n\n        const data_note = {\n          fullname: information.fullname,\n          phone: information.phone\n        }; // Xứ lý API Note\n\n        const response_Note = await NoteAPI.post_note(data_note); // data Order\n\n        const data_order = {\n          id_user: sessionStorage.getItem('id_user'),\n          address: information.address,\n          total: total,\n          status: '1',\n          pay: true,\n          id_payment: '60c05c3adae4bef7b3d55fbf',\n          id_note: response_Note._id,\n          feeship: price,\n          id_coupon: localStorage.getItem('id_coupon') ? localStorage.getItem('id_coupon') : '',\n          create_time: `${new Date().getDate()}/${parseInt(new Date().getMonth()) + 1}/${new Date().getFullYear()}`\n        }; // Xứ lý API Order\n\n        const response_order = await OrderAPI.post_order(data_order); // data carts\n\n        const data_carts = JSON.parse(localStorage.getItem('carts')); // Xử lý API Detail_Order\n\n        for (let i = 0; i < data_carts.length; i++) {\n          const data_detail_order = {\n            id_order: response_order._id,\n            id_product: data_carts[i].id_product,\n            name_product: data_carts[i].name_product,\n            price_product: data_carts[i].price_product,\n            count: data_carts[i].count,\n            size: data_carts[i].size\n          };\n          await Detail_OrderAPI.post_detail_order(data_detail_order);\n        }\n\n        localStorage.setItem('carts', JSON.stringify([]));\n        localStorage.removeItem('information');\n        localStorage.removeItem('total_price');\n        localStorage.removeItem('price');\n        localStorage.removeItem('id_coupon');\n        localStorage.removeItem('coupon'); // Hàm này dùng để load lại phần header bằng Redux\n\n        const action_count_change = changeCount(count_change);\n        dispatch(action_count_change);\n        setTimeout(() => {\n          window.location.href = '/history';\n        }, 2500);\n        setNote(\"You Have Ordered Successfully\");\n      } else {\n        setNote(\"You Have Ordered Fail\");\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container fix_order\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: '1.2rem'\n      },\n      children: \"Please Checking Information Again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderMomo, \"POQn8syGlRQDWu0+YxMZUgKviHU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = OrderMomo;\nexport default OrderMomo;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderMomo\");","map":{"version":3,"sources":["D:/class/cnWeb/QLNH/client_app/src/Order/OrderMomo.jsx"],"names":["React","useState","useEffect","crypto","useDispatch","useSelector","changeCount","CouponAPI","NoteAPI","OrderAPI","Detail_OrderAPI","OrderMomo","props","search","window","location","note","setNote","count_change","state","Count","isLoad","dispatch","information","JSON","parse","localStorage","getItem","total","price","fetchData","serectkey","accessKey","URLSearchParams","get","amount","extraData","errorCode","localMessage","message","orderId","orderInfo","orderType","partnerCode","payType","requestId","responseTime","transId","param","signature","createHmac","update","digest","href","responseUpdate","updateCoupon","console","log","data_note","fullname","phone","response_Note","post_note","data_order","id_user","sessionStorage","address","status","pay","id_payment","id_note","_id","feeship","id_coupon","create_time","Date","getDate","parseInt","getMonth","getFullYear","response_order","post_order","data_carts","i","length","data_detail_order","id_order","id_product","name_product","price_product","count","size","post_detail_order","setItem","stringify","removeItem","action_count_change","setTimeout","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport crypto from 'crypto'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeCount } from '../Redux/Action/ActionCount';\r\nimport CouponAPI from '../API/CouponAPI';\r\nimport NoteAPI from '../API/NoteAPI';\r\nimport OrderAPI from '../API/OrderAPI';\r\nimport Detail_OrderAPI from '../API/Detail_OrderAPI';\r\n\r\nfunction OrderMomo(props) {\r\n    const { search } = window.location;\r\n\r\n    const [note, setNote] = useState('')\r\n\r\n    const count_change = useSelector(state => state.Count.isLoad)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        const information = JSON.parse(localStorage.getItem('information'))\r\n        const total = localStorage.getItem('total_price')\r\n        const price = localStorage.getItem('price')\r\n\r\n        const fetchData = async () => {\r\n            const serectkey = \"uLb683H8g9dWuiyipZbLHgO6zjSDlVm5\"\r\n            const accessKey = new URLSearchParams(search).get('accessKey')\r\n            const amount = new URLSearchParams(search).get('amount')\r\n            const extraData = new URLSearchParams(search).get('extraData')\r\n            const errorCode = new URLSearchParams(search).get('errorCode')\r\n            const localMessage = new URLSearchParams(search).get('localMessage')\r\n            const message = new URLSearchParams(search).get('message')\r\n            const orderId = new URLSearchParams(search).get('orderId')\r\n            const orderInfo = new URLSearchParams(search).get('orderInfo')\r\n            const orderType = new URLSearchParams(search).get('orderType')\r\n            const partnerCode = new URLSearchParams(search).get('partnerCode')\r\n            const payType = new URLSearchParams(search).get('payType')\r\n            const requestId = new URLSearchParams(search).get('requestId')\r\n            const responseTime = new URLSearchParams(search).get('responseTime')\r\n            const transId = new URLSearchParams(search).get('transId')\r\n\r\n            let param = `partnerCode=${partnerCode}&accessKey=${accessKey}&requestId=${requestId}&amount=${amount}&orderId=${orderId}&orderInfo=${orderInfo}&orderType=${orderType}&transId=${transId}&message=${message}&localMessage=${localMessage}&responseTime=${responseTime}&errorCode=${errorCode}&payType=${payType}&extraData=${extraData}`\r\n\r\n            var signature = crypto.createHmac('sha256', serectkey)\r\n                .update(param)\r\n                .digest('hex');\r\n\r\n            if (new URLSearchParams(search).get('signature') !== signature) {\r\n                setNote(\"Information Request Invalid\")\r\n                return;\r\n            }\r\n            if (errorCode == 0) {\r\n\r\n                if (!information)\r\n                {\r\n                    window.location.href = '/'\r\n                    return\r\n                }\r\n\r\n                if (localStorage.getItem(\"id_coupon\")){\r\n\r\n                    const responseUpdate = await CouponAPI.updateCoupon(localStorage.getItem(\"id_coupon\"))\r\n                    console.log(responseUpdate)\r\n        \r\n                }\r\n\r\n                // data Note\r\n                const data_note = {\r\n                    fullname: information.fullname,\r\n                    phone: information.phone,\r\n                }\r\n\r\n                // Xứ lý API Note\r\n                const response_Note = await NoteAPI.post_note(data_note)\r\n\r\n                // data Order\r\n                const data_order = {\r\n                    id_user: sessionStorage.getItem('id_user'),\r\n                    address: information.address,\r\n                    total: total,\r\n                    status: '1',\r\n                    pay: true,\r\n                    id_payment: '60c05c3adae4bef7b3d55fbf',\r\n                    id_note: response_Note._id,\r\n                    feeship: price,\r\n                    id_coupon: localStorage.getItem('id_coupon') ? localStorage.getItem('id_coupon') : '',\r\n                    create_time: `${new Date().getDate()}/${parseInt(new Date().getMonth()) + 1}/${new Date().getFullYear()}`\r\n                }\r\n\r\n                // Xứ lý API Order\r\n                const response_order = await OrderAPI.post_order(data_order)\r\n\r\n                // data carts\r\n                const data_carts = JSON.parse(localStorage.getItem('carts'))\r\n\r\n                // Xử lý API Detail_Order\r\n                for (let i = 0; i < data_carts.length; i++) {\r\n\r\n                    const data_detail_order = {\r\n                        id_order: response_order._id,\r\n                        id_product: data_carts[i].id_product,\r\n                        name_product: data_carts[i].name_product,\r\n                        price_product: data_carts[i].price_product,\r\n                        count: data_carts[i].count,\r\n                        size: data_carts[i].size\r\n                    }\r\n\r\n                    await Detail_OrderAPI.post_detail_order(data_detail_order)\r\n\r\n                }\r\n\r\n                localStorage.setItem('carts', JSON.stringify([]))\r\n                localStorage.removeItem('information')\r\n                localStorage.removeItem('total_price')\r\n                localStorage.removeItem('price')\r\n                localStorage.removeItem('id_coupon')\r\n                localStorage.removeItem('coupon')\r\n\r\n\r\n                // Hàm này dùng để load lại phần header bằng Redux\r\n                const action_count_change = changeCount(count_change)\r\n                dispatch(action_count_change)\r\n\r\n                setTimeout(() => {\r\n                    window.location.href = '/history'\r\n                }, 2500)\r\n\r\n                setNote(\"You Have Ordered Successfully\")\r\n\r\n            } else {\r\n                setNote(\"You Have Ordered Fail\")\r\n            }\r\n\r\n        }\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container fix_order\">\r\n            <h1>{note}</h1>\r\n            <span style={{ fontSize: '1.2rem' }}>Please Checking Information Again!</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderMomo;"]},"metadata":{},"sourceType":"module"}