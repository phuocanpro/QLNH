{"ast":null,"code":"export const isJsonString = data => {\n  try {\n    JSON.parse(data);\n  } catch (error) {\n    return false;\n  }\n\n  return true;\n};\nexport const getBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => resolve(reader.result);\n\n  reader.onerror = error => reject(error);\n});\nexport function getItem(label, key, icon, children, type) {\n  return {\n    key,\n    icon,\n    children,\n    label,\n    type\n  };\n}\nexport const renderOptions = arr => {\n  let results = [];\n\n  if (arr) {\n    results = arr === null || arr === void 0 ? void 0 : arr.map(opt => {\n      return {\n        value: opt,\n        label: opt\n      };\n    });\n  }\n\n  results.push({\n    label: \"Add type\",\n    value: \"add_type\"\n  });\n  return results;\n};","map":{"version":3,"sources":["D:/CNWEB/QLNH/client_app/src/AdminPage/utils.js"],"names":["isJsonString","data","JSON","parse","error","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","getItem","label","key","icon","children","type","renderOptions","arr","results","map","opt","value","push"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,IAAD,IAAU;AAClC,MAAI;AACFC,IAAAA,IAAI,CAACC,KAAL,CAAWF,IAAX;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAPI;AAQL,OAAO,MAAMC,SAAS,GAAIC,IAAD,IACvB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB;;AACAI,EAAAA,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;;AACAJ,EAAAA,MAAM,CAACK,OAAP,GAAkBX,KAAD,IAAWK,MAAM,CAACL,KAAD,CAAlC;AACD,CALD,CADK;AAQP,OAAO,SAASY,OAAT,CAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,IAA7C,EAAmD;AACxD,SAAO;AACLH,IAAAA,GADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,QAHK;AAILH,IAAAA,KAJK;AAKLI,IAAAA;AALK,GAAP;AAOD;AAED,OAAO,MAAMC,aAAa,GAAIC,GAAD,IAAS;AACpC,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,GAAJ,EAAS;AACPC,IAAAA,OAAO,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,GAAL,CAAUC,GAAD,IAAS;AAC1B,aAAO;AACLC,QAAAA,KAAK,EAAED,GADF;AAELT,QAAAA,KAAK,EAAES;AAFF,OAAP;AAID,KALS,CAAV;AAMD;;AACDF,EAAAA,OAAO,CAACI,IAAR,CAAa;AACXX,IAAAA,KAAK,EAAE,UADI;AAEXU,IAAAA,KAAK,EAAE;AAFI,GAAb;AAIA,SAAOH,OAAP;AACD,CAfM","sourcesContent":["export const isJsonString = (data) => {\n    try {\n      JSON.parse(data);\n    } catch (error) {\n      return false;\n    }\n    return true;\n  };\n  export const getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  \n  export function getItem(label, key, icon, children, type) {\n    return {\n      key,\n      icon,\n      children,\n      label,\n      type,\n    };\n  }\n  \n  export const renderOptions = (arr) => {\n    let results = [];\n    if (arr) {\n      results = arr?.map((opt) => {\n        return {\n          value: opt,\n          label: opt,\n        };\n      });\n    }\n    results.push({\n      label: \"Add type\",\n      value: \"add_type\",\n    });\n    return results;\n  };\n  "]},"metadata":{},"sourceType":"module"}