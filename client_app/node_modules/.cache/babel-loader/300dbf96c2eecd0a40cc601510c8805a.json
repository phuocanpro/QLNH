{"ast":null,"code":"const CartsLocal = {\n  addProduct: data => {\n    //Lấy dữ liệu từ local\n    const data_add_cart = data; //Lấy dữ liệu có sẵn trong state\n\n    const add_cart = JSON.parse(localStorage.getItem('carts'));\n    console.log(add_cart.length);\n    console.log(data_add_cart);\n\n    if (add_cart.length < 1) {\n      add_cart.push(data_add_cart);\n      localStorage.setItem('carts', JSON.stringify(add_cart));\n    } else {\n      //Tìm xem thử sản phẩm này đã mua hay chưa\n      const findCart = add_cart.find(value => {\n        return value.id_product === data_add_cart.id_product;\n      });\n      let flag = false; //Nếu này chưa được mua thì mình push vào\n      //Còn đã từng mua rồi thì mình update tại vị trí indexCart mà mình vừa tìm được\n\n      if (!findCart) {\n        add_cart.push(data_add_cart);\n        localStorage.setItem('carts', JSON.stringify(add_cart));\n      } else {\n        for (let i = 0; i < add_cart.length; i++) {\n          if (add_cart[i].id_product === data_add_cart.id_product) {\n            if (add_cart[i].size === data_add_cart.size) {\n              add_cart[i].count = parseInt(add_cart[i].count) + parseInt(data_add_cart.count);\n              flag = true;\n              console.log(\"Update\");\n              localStorage.setItem('carts', JSON.stringify(add_cart));\n            }\n          }\n        }\n\n        if (!flag) {\n          add_cart.push(data_add_cart);\n          console.log(\"Push\");\n          localStorage.setItem('carts', JSON.stringify(add_cart));\n        }\n      }\n    }\n  },\n  deleteProduct: data => {\n    //Lấy dữ diệu có sẵn trong state\n    const delete_cart = JSON.parse(localStorage.getItem('carts'));\n    console.log(data); //Tìm kiểm vị trí mà cần xóa\n\n    const indexDelete = delete_cart.findIndex(value => {\n      return value.id_cart === data;\n    }); //Xóa theo vị trí\n\n    delete_cart.splice(indexDelete, 1);\n    localStorage.setItem('carts', JSON.stringify(delete_cart));\n  },\n  updateProduct: data => {\n    const data_update_cart = data;\n    const update_cart = JSON.parse(localStorage.getItem('carts'));\n    const index = update_cart.findIndex(value => {\n      return value.id_cart === data_update_cart.id_cart;\n    });\n    update_cart[index].count = data_update_cart.count;\n    localStorage.setItem('carts', JSON.stringify(update_cart));\n  }\n};\nexport default CartsLocal;","map":{"version":3,"sources":["D:/class/cnWeb/QLNH/client_app/src/Share/CartsLocal.jsx"],"names":["CartsLocal","addProduct","data","data_add_cart","add_cart","JSON","parse","localStorage","getItem","console","log","length","push","setItem","stringify","findCart","find","value","id_product","flag","i","size","count","parseInt","deleteProduct","delete_cart","indexDelete","findIndex","id_cart","splice","updateProduct","data_update_cart","update_cart","index"],"mappings":"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","sourcesContent":["\r\n\r\nconst CartsLocal = {\r\n\r\n    addProduct: (data) => {\r\n        //Lấy dữ liệu từ local\r\n        const data_add_cart = data\r\n\r\n        //Lấy dữ liệu có sẵn trong state\r\n        const add_cart = JSON.parse(localStorage.getItem('carts'))\r\n\r\n        console.log(add_cart.length)\r\n        console.log(data_add_cart)\r\n\r\n        if (add_cart.length < 1) {\r\n\r\n            add_cart.push(data_add_cart)\r\n\r\n            localStorage.setItem('carts', JSON.stringify(add_cart))\r\n\r\n        } else {           \r\n\r\n            //Tìm xem thử sản phẩm này đã mua hay chưa\r\n            const findCart = add_cart.find(value => {\r\n                return value.id_product === data_add_cart.id_product\r\n            })\r\n\r\n            let flag = false\r\n\r\n            //Nếu này chưa được mua thì mình push vào\r\n            //Còn đã từng mua rồi thì mình update tại vị trí indexCart mà mình vừa tìm được\r\n            if (!findCart) {\r\n                add_cart.push(data_add_cart)\r\n                \r\n                localStorage.setItem('carts', JSON.stringify(add_cart))\r\n            } else {\r\n                for (let i = 0; i < add_cart.length; i++) {\r\n                    if (add_cart[i].id_product === data_add_cart.id_product) {\r\n                        if (add_cart[i].size === data_add_cart.size) {\r\n                            add_cart[i].count = parseInt(add_cart[i].count) + parseInt(data_add_cart.count)\r\n                            flag = true\r\n                            console.log(\"Update\")\r\n\r\n                            localStorage.setItem('carts', JSON.stringify(add_cart))\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!flag) {\r\n                    add_cart.push(data_add_cart)\r\n                    console.log(\"Push\")\r\n\r\n                    localStorage.setItem('carts', JSON.stringify(add_cart))\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    deleteProduct: (data) => {\r\n        //Lấy dữ diệu có sẵn trong state\r\n        const delete_cart = JSON.parse(localStorage.getItem('carts'))\r\n\r\n        console.log(data)\r\n\r\n        //Tìm kiểm vị trí mà cần xóa\r\n        const indexDelete = delete_cart.findIndex(value => {\r\n            return value.id_cart === data\r\n        })\r\n\r\n        //Xóa theo vị trí\r\n        delete_cart.splice(indexDelete, 1)\r\n\r\n        localStorage.setItem('carts', JSON.stringify(delete_cart))\r\n    },\r\n\r\n    updateProduct: (data) => {\r\n        const data_update_cart = data\r\n            \r\n        const update_cart = JSON.parse(localStorage.getItem('carts'))\r\n\r\n        const index = update_cart.findIndex(value => {\r\n            return value.id_cart === data_update_cart.id_cart\r\n        })\r\n\r\n        update_cart[index].count = data_update_cart.count\r\n\r\n        localStorage.setItem('carts', JSON.stringify(update_cart))\r\n    }\r\n\r\n}\r\n\r\nexport default CartsLocal"]},"metadata":{},"sourceType":"module"}