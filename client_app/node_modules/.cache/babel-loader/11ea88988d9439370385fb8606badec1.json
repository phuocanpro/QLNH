{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleStyle = handleStyle;\nexports.handleNumFmtId = handleNumFmtId;\nexports.Alignment = exports.Font = exports.Fill = exports.Border = exports.Style = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _xmlStyle = require(\"./xmlStyle\");\n\nfunction handleStyle(style, numFmtId, styles) {\n  var _style$makeXStyleElem = style.makeXStyleElements(),\n      xFont = _style$makeXStyleElem.xFont,\n      xFill = _style$makeXStyleElem.xFill,\n      xBorder = _style$makeXStyleElem.xBorder,\n      xXf = _style$makeXStyleElem.xXf;\n\n  var fontId = styles.addFont(xFont);\n  var fillId = styles.addFill(xFill); // HACK - adding light grey fill, as in OO and Google\n\n  var greyfill = new _xmlStyle.Xfill({\n    patternFill: new _xmlStyle.XpatternFill({\n      patternType: 'lightGray'\n    })\n  });\n  styles.addFill(greyfill);\n  var borderId = styles.addBorder(xBorder);\n  xXf.fontId = fontId;\n  xXf.fillId = fillId;\n  xXf.borderId = borderId;\n  xXf.numFmtId = numFmtId; // apply the numFmtId when it is not the default cellxf\n\n  if (xXf.numFmtId > 0) {\n    xXf.applyNumberFormat = true;\n  }\n\n  xXf.alignment.horizontal = style.align.h;\n  xXf.alignment.indent = style.align.indent;\n  xXf.alignment.shrinkToFit = style.align.shrinkToFit;\n  xXf.alignment.textRotation = style.align.textRotation;\n  xXf.alignment.vertical = style.align.v;\n  xXf.alignment.wrapText = style.align.wrapText;\n  return styles.addCellXf(xXf);\n}\n\nfunction handleNumFmtId(numFmtId, styles) {\n  var xf = new _xmlStyle.Xxf({\n    numFmtId\n  });\n\n  if (numFmtId > 0) {\n    xf.applyNumberFormat = true;\n  }\n\n  return styles.addCellXf(xf);\n}\n/**\n * Style class for set Cell styles.\n */\n\n\nvar Style = /*#__PURE__*/function () {\n  function Style() {\n    (0, _classCallCheck2.default)(this, Style);\n    (0, _defineProperty2.default)(this, \"applyBorder\", false);\n    (0, _defineProperty2.default)(this, \"applyFill\", false);\n    (0, _defineProperty2.default)(this, \"applyFont\", false);\n    (0, _defineProperty2.default)(this, \"applyAlignment\", false);\n    (0, _defineProperty2.default)(this, \"namedStyleIndex\", null);\n    /**\n     * Cell border\n     * @type {Border}\n     */\n\n    this.border = new Border({});\n    /**\n     * Cell fill background or foreground\n     * @type {Fill}\n     */\n\n    this.fill = new Fill({});\n    /**\n     * Cell font\n     * @type {Font}\n     */\n\n    this.font = new Font({});\n    /**\n     * Cell alignment\n     * @type {Alignment}\n     */\n\n    this.align = new Alignment({});\n  }\n\n  (0, _createClass2.default)(Style, [{\n    key: \"makeXStyleElements\",\n    value: function makeXStyleElements() {\n      var xFont = new _xmlStyle.Xfont({\n        sz: this.font.size,\n        name: this.font.name,\n        family: this.font.family,\n        charset: this.font.charset,\n        color: this.font.color,\n        b: this.font.bold,\n        i: this.font.italic,\n        u: this.font.underline\n      });\n      var xFill = new _xmlStyle.Xfill({\n        patternFill: new _xmlStyle.XpatternFill({\n          patternType: this.fill.patternType,\n          fgColor: this.fill.fgColor,\n          bgColor: this.fill.bgColor\n        })\n      });\n      var xBorder = new _xmlStyle.Xborder({\n        left: {\n          style: this.border.left,\n          color: this.border.leftColor\n        },\n        right: {\n          style: this.border.right,\n          color: this.border.rightColor\n        },\n        top: {\n          style: this.border.top,\n          color: this.border.topColor\n        },\n        bottom: {\n          style: this.border.bottom,\n          color: this.border.bottomColor\n        }\n      });\n      var xXf = new _xmlStyle.Xxf({\n        numFmtId: 0,\n        applyBorder: this.applyBorder,\n        applyFill: this.applyFill,\n        applyFont: this.applyFont,\n        applyAlignment: this.applyAlignment\n      });\n      xXf.alignment = new _xmlStyle.Xalignment({\n        horizontal: this.align.h,\n        indent: this.align.indent,\n        shrinkToFit: this.align.shrinkToFit,\n        textRotation: this.align.textRotation,\n        vertical: this.align.v,\n        wrapText: this.align.wrapText\n      });\n\n      if (this.namedStyleIndex !== null) {\n        xXf.xfId = this.namedStyleIndex;\n      }\n\n      return {\n        xFont,\n        xFill,\n        xBorder,\n        xXf\n      };\n    }\n  }]);\n  return Style;\n}();\n/**\n * Border of the Style and border type have: `none`, `thin`, `medium`, `thick`, `dashed`, `dotted`, `double`\n *\n */\n\n\nexports.Style = Style;\n\nvar Border =\n/**\n * left border color\n * @type {String}\n */\n\n/**\n * right border color\n * @type {String}\n */\n\n/**\n * top border color\n * @type {String}\n */\n\n/**\n * bottom border color\n * @type {String}\n */\nfunction Border(_ref) {\n  var _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 'none' : _ref$left,\n      _ref$right = _ref.right,\n      right = _ref$right === void 0 ? 'none' : _ref$right,\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 'none' : _ref$top,\n      _ref$bottom = _ref.bottom,\n      bottom = _ref$bottom === void 0 ? 'none' : _ref$bottom;\n  (0, _classCallCheck2.default)(this, Border);\n  (0, _defineProperty2.default)(this, \"leftColor\", undefined);\n  (0, _defineProperty2.default)(this, \"rightColor\", undefined);\n  (0, _defineProperty2.default)(this, \"topColor\", undefined);\n  (0, _defineProperty2.default)(this, \"bottomColor\", undefined);\n  /**\n   * left border type\n   * @type {String}\n   */\n\n  this.left = left;\n  /**\n   * right border type\n   * @type {String}\n   */\n\n  this.right = right;\n  /**\n   * top border type\n   * @type {String}\n   */\n\n  this.top = top;\n  /**\n   * bottom border type\n   * @type {String}\n   */\n\n  this.bottom = bottom;\n};\n/**\n * Fill of the Style\n */\n\n\nexports.Border = Border;\n\nvar Fill = function Fill(_ref2) {\n  var _ref2$patternType = _ref2.patternType,\n      patternType = _ref2$patternType === void 0 ? 'none' : _ref2$patternType,\n      _ref2$fgColor = _ref2.fgColor,\n      fgColor = _ref2$fgColor === void 0 ? 'FFFFFFFF' : _ref2$fgColor,\n      _ref2$bgColor = _ref2.bgColor,\n      bgColor = _ref2$bgColor === void 0 ? '00000000' : _ref2$bgColor;\n  (0, _classCallCheck2.default)(this, Fill);\n  /**\n   * pattern type of the fill\n   * @type {String}\n   */\n\n  this.patternType = patternType;\n  /**\n   * foreground color of the fill\n   * @type {String}\n   */\n\n  this.fgColor = fgColor;\n  /**\n   * background color of the fill\n   * @type {String}\n   */\n\n  this.bgColor = bgColor;\n};\n/**\n * Font of the Style\n */\n\n\nexports.Fill = Fill;\n\nvar Font =\n/**\n * font color\n * @type {String}\n */\n\n/**\n * Is bold style\n * @type {Boolean}\n */\n\n/**\n * Is italic style\n * @type {Boolean}\n */\n\n/**\n * IS underline style\n * @type {Boolean}\n */\nfunction Font(_ref3) {\n  var _ref3$size = _ref3.size,\n      size = _ref3$size === void 0 ? 12 : _ref3$size,\n      _ref3$name = _ref3.name,\n      name = _ref3$name === void 0 ? 'Verdana' : _ref3$name;\n  (0, _classCallCheck2.default)(this, Font);\n  (0, _defineProperty2.default)(this, \"family\", 0);\n  (0, _defineProperty2.default)(this, \"charset\", 0);\n  (0, _defineProperty2.default)(this, \"color\", undefined);\n  (0, _defineProperty2.default)(this, \"bold\", false);\n  (0, _defineProperty2.default)(this, \"italic\", false);\n  (0, _defineProperty2.default)(this, \"underline\", false);\n  /**\n   * font size [default 12]\n   * @type {Number}\n   */\n\n  this.size = size;\n  this.name = name;\n};\n/**\n * Alignment of the Style.\n */\n\n\nexports.Font = Font;\n\nvar Alignment = function Alignment(_ref4) {\n  var _ref4$h = _ref4.h,\n      h = _ref4$h === void 0 ? 'general' : _ref4$h,\n      _ref4$v = _ref4.v,\n      v = _ref4$v === void 0 ? 'bottom' : _ref4$v;\n  (0, _classCallCheck2.default)(this, Alignment);\n  (0, _defineProperty2.default)(this, \"indent\", 0);\n  (0, _defineProperty2.default)(this, \"shrinkToFit\", false);\n  (0, _defineProperty2.default)(this, \"textRotation\", 0);\n  (0, _defineProperty2.default)(this, \"wrapText\", false);\n  /**\n   * Horizontal align: `general`, `center`, `left`, `right`\n   * @type {String}\n   */\n\n  this.h = h;\n  /**\n   * Vertical align: `general`, `top`, `bottom`, `center`\n   * @type {String}\n   */\n\n  this.v = v;\n};\n\nexports.Alignment = Alignment;","map":{"version":3,"sources":["D:/CNWEB/QLNH/client_app/node_modules/better-xlsx/lib/style.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","handleStyle","handleNumFmtId","Alignment","Font","Fill","Border","Style","_classCallCheck2","_createClass2","_defineProperty2","_xmlStyle","style","numFmtId","styles","_style$makeXStyleElem","makeXStyleElements","xFont","xFill","xBorder","xXf","fontId","addFont","fillId","addFill","greyfill","Xfill","patternFill","XpatternFill","patternType","borderId","addBorder","applyNumberFormat","alignment","horizontal","align","h","indent","shrinkToFit","textRotation","vertical","v","wrapText","addCellXf","xf","Xxf","default","border","fill","font","key","Xfont","sz","size","name","family","charset","color","b","bold","i","italic","u","underline","fgColor","bgColor","Xborder","left","leftColor","right","rightColor","top","topColor","bottom","bottomColor","applyBorder","applyFill","applyFont","applyAlignment","Xalignment","namedStyleIndex","xfId","_ref","_ref$left","_ref$right","_ref$top","_ref$bottom","undefined","_ref2","_ref2$patternType","_ref2$fgColor","_ref2$bgColor","_ref3","_ref3$size","_ref3$name","_ref4","_ref4$h","_ref4$v"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleStyle = handleStyle;\nexports.handleNumFmtId = handleNumFmtId;\nexports.Alignment = exports.Font = exports.Fill = exports.Border = exports.Style = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _xmlStyle = require(\"./xmlStyle\");\n\nfunction handleStyle(style, numFmtId, styles) {\n  var _style$makeXStyleElem = style.makeXStyleElements(),\n      xFont = _style$makeXStyleElem.xFont,\n      xFill = _style$makeXStyleElem.xFill,\n      xBorder = _style$makeXStyleElem.xBorder,\n      xXf = _style$makeXStyleElem.xXf;\n\n  var fontId = styles.addFont(xFont);\n  var fillId = styles.addFill(xFill); // HACK - adding light grey fill, as in OO and Google\n\n  var greyfill = new _xmlStyle.Xfill({\n    patternFill: new _xmlStyle.XpatternFill({\n      patternType: 'lightGray'\n    })\n  });\n  styles.addFill(greyfill);\n  var borderId = styles.addBorder(xBorder);\n  xXf.fontId = fontId;\n  xXf.fillId = fillId;\n  xXf.borderId = borderId;\n  xXf.numFmtId = numFmtId; // apply the numFmtId when it is not the default cellxf\n\n  if (xXf.numFmtId > 0) {\n    xXf.applyNumberFormat = true;\n  }\n\n  xXf.alignment.horizontal = style.align.h;\n  xXf.alignment.indent = style.align.indent;\n  xXf.alignment.shrinkToFit = style.align.shrinkToFit;\n  xXf.alignment.textRotation = style.align.textRotation;\n  xXf.alignment.vertical = style.align.v;\n  xXf.alignment.wrapText = style.align.wrapText;\n  return styles.addCellXf(xXf);\n}\n\nfunction handleNumFmtId(numFmtId, styles) {\n  var xf = new _xmlStyle.Xxf({\n    numFmtId\n  });\n\n  if (numFmtId > 0) {\n    xf.applyNumberFormat = true;\n  }\n\n  return styles.addCellXf(xf);\n}\n/**\n * Style class for set Cell styles.\n */\n\n\nvar Style = /*#__PURE__*/function () {\n  function Style() {\n    (0, _classCallCheck2.default)(this, Style);\n    (0, _defineProperty2.default)(this, \"applyBorder\", false);\n    (0, _defineProperty2.default)(this, \"applyFill\", false);\n    (0, _defineProperty2.default)(this, \"applyFont\", false);\n    (0, _defineProperty2.default)(this, \"applyAlignment\", false);\n    (0, _defineProperty2.default)(this, \"namedStyleIndex\", null);\n\n    /**\n     * Cell border\n     * @type {Border}\n     */\n    this.border = new Border({});\n    /**\n     * Cell fill background or foreground\n     * @type {Fill}\n     */\n\n    this.fill = new Fill({});\n    /**\n     * Cell font\n     * @type {Font}\n     */\n\n    this.font = new Font({});\n    /**\n     * Cell alignment\n     * @type {Alignment}\n     */\n\n    this.align = new Alignment({});\n  }\n\n  (0, _createClass2.default)(Style, [{\n    key: \"makeXStyleElements\",\n    value: function makeXStyleElements() {\n      var xFont = new _xmlStyle.Xfont({\n        sz: this.font.size,\n        name: this.font.name,\n        family: this.font.family,\n        charset: this.font.charset,\n        color: this.font.color,\n        b: this.font.bold,\n        i: this.font.italic,\n        u: this.font.underline\n      });\n      var xFill = new _xmlStyle.Xfill({\n        patternFill: new _xmlStyle.XpatternFill({\n          patternType: this.fill.patternType,\n          fgColor: this.fill.fgColor,\n          bgColor: this.fill.bgColor\n        })\n      });\n      var xBorder = new _xmlStyle.Xborder({\n        left: {\n          style: this.border.left,\n          color: this.border.leftColor\n        },\n        right: {\n          style: this.border.right,\n          color: this.border.rightColor\n        },\n        top: {\n          style: this.border.top,\n          color: this.border.topColor\n        },\n        bottom: {\n          style: this.border.bottom,\n          color: this.border.bottomColor\n        }\n      });\n      var xXf = new _xmlStyle.Xxf({\n        numFmtId: 0,\n        applyBorder: this.applyBorder,\n        applyFill: this.applyFill,\n        applyFont: this.applyFont,\n        applyAlignment: this.applyAlignment\n      });\n      xXf.alignment = new _xmlStyle.Xalignment({\n        horizontal: this.align.h,\n        indent: this.align.indent,\n        shrinkToFit: this.align.shrinkToFit,\n        textRotation: this.align.textRotation,\n        vertical: this.align.v,\n        wrapText: this.align.wrapText\n      });\n\n      if (this.namedStyleIndex !== null) {\n        xXf.xfId = this.namedStyleIndex;\n      }\n\n      return {\n        xFont,\n        xFill,\n        xBorder,\n        xXf\n      };\n    }\n  }]);\n  return Style;\n}();\n/**\n * Border of the Style and border type have: `none`, `thin`, `medium`, `thick`, `dashed`, `dotted`, `double`\n *\n */\n\n\nexports.Style = Style;\n\nvar Border =\n/**\n * left border color\n * @type {String}\n */\n\n/**\n * right border color\n * @type {String}\n */\n\n/**\n * top border color\n * @type {String}\n */\n\n/**\n * bottom border color\n * @type {String}\n */\nfunction Border(_ref) {\n  var _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 'none' : _ref$left,\n      _ref$right = _ref.right,\n      right = _ref$right === void 0 ? 'none' : _ref$right,\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 'none' : _ref$top,\n      _ref$bottom = _ref.bottom,\n      bottom = _ref$bottom === void 0 ? 'none' : _ref$bottom;\n  (0, _classCallCheck2.default)(this, Border);\n  (0, _defineProperty2.default)(this, \"leftColor\", undefined);\n  (0, _defineProperty2.default)(this, \"rightColor\", undefined);\n  (0, _defineProperty2.default)(this, \"topColor\", undefined);\n  (0, _defineProperty2.default)(this, \"bottomColor\", undefined);\n\n  /**\n   * left border type\n   * @type {String}\n   */\n  this.left = left;\n  /**\n   * right border type\n   * @type {String}\n   */\n\n  this.right = right;\n  /**\n   * top border type\n   * @type {String}\n   */\n\n  this.top = top;\n  /**\n   * bottom border type\n   * @type {String}\n   */\n\n  this.bottom = bottom;\n};\n/**\n * Fill of the Style\n */\n\n\nexports.Border = Border;\n\nvar Fill = function Fill(_ref2) {\n  var _ref2$patternType = _ref2.patternType,\n      patternType = _ref2$patternType === void 0 ? 'none' : _ref2$patternType,\n      _ref2$fgColor = _ref2.fgColor,\n      fgColor = _ref2$fgColor === void 0 ? 'FFFFFFFF' : _ref2$fgColor,\n      _ref2$bgColor = _ref2.bgColor,\n      bgColor = _ref2$bgColor === void 0 ? '00000000' : _ref2$bgColor;\n  (0, _classCallCheck2.default)(this, Fill);\n\n  /**\n   * pattern type of the fill\n   * @type {String}\n   */\n  this.patternType = patternType;\n  /**\n   * foreground color of the fill\n   * @type {String}\n   */\n\n  this.fgColor = fgColor;\n  /**\n   * background color of the fill\n   * @type {String}\n   */\n\n  this.bgColor = bgColor;\n};\n/**\n * Font of the Style\n */\n\n\nexports.Fill = Fill;\n\nvar Font =\n/**\n * font color\n * @type {String}\n */\n\n/**\n * Is bold style\n * @type {Boolean}\n */\n\n/**\n * Is italic style\n * @type {Boolean}\n */\n\n/**\n * IS underline style\n * @type {Boolean}\n */\nfunction Font(_ref3) {\n  var _ref3$size = _ref3.size,\n      size = _ref3$size === void 0 ? 12 : _ref3$size,\n      _ref3$name = _ref3.name,\n      name = _ref3$name === void 0 ? 'Verdana' : _ref3$name;\n  (0, _classCallCheck2.default)(this, Font);\n  (0, _defineProperty2.default)(this, \"family\", 0);\n  (0, _defineProperty2.default)(this, \"charset\", 0);\n  (0, _defineProperty2.default)(this, \"color\", undefined);\n  (0, _defineProperty2.default)(this, \"bold\", false);\n  (0, _defineProperty2.default)(this, \"italic\", false);\n  (0, _defineProperty2.default)(this, \"underline\", false);\n\n  /**\n   * font size [default 12]\n   * @type {Number}\n   */\n  this.size = size;\n  this.name = name;\n};\n/**\n * Alignment of the Style.\n */\n\n\nexports.Font = Font;\n\nvar Alignment = function Alignment(_ref4) {\n  var _ref4$h = _ref4.h,\n      h = _ref4$h === void 0 ? 'general' : _ref4$h,\n      _ref4$v = _ref4.v,\n      v = _ref4$v === void 0 ? 'bottom' : _ref4$v;\n  (0, _classCallCheck2.default)(this, Alignment);\n  (0, _defineProperty2.default)(this, \"indent\", 0);\n  (0, _defineProperty2.default)(this, \"shrinkToFit\", false);\n  (0, _defineProperty2.default)(this, \"textRotation\", 0);\n  (0, _defineProperty2.default)(this, \"wrapText\", false);\n\n  /**\n   * Horizontal align: `general`, `center`, `left`, `right`\n   * @type {String}\n   */\n  this.h = h;\n  /**\n   * Vertical align: `general`, `top`, `bottom`, `center`\n   * @type {String}\n   */\n\n  this.v = v;\n};\n\nexports.Alignment = Alignment;"]},"metadata":{},"sourceType":"script"}