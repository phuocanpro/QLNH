{"ast":null,"code":"var _jsxFileName = \"D:\\\\class\\\\cnWeb\\\\QLNH\\\\client_app\\\\src\\\\Checkout\\\\Paypal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from \"socket.io-client\";\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport OrderAPI from '../API/OrderAPI';\nimport { changeCount } from '../Redux/Action/ActionCount';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NoteAPI from '../API/NoteAPI';\nimport Detail_OrderAPI from '../API/Detail_OrderAPI';\nimport CouponAPI from '../API/CouponAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('https://hieusuper20hcm.herokuapp.com/', {\n  transports: ['websocket'],\n  jsonp: false\n});\nsocket.connect();\nPaypal.propTypes = {\n  information: PropTypes.object,\n  total: PropTypes.number,\n  Change_Load_Order: PropTypes.func,\n  from: PropTypes.string,\n  distance: PropTypes.string,\n  duration: PropTypes.string,\n  price: PropTypes.string\n};\nPaypal.defaultProps = {\n  information: {},\n  total: 0,\n  Change_Load_Order: null,\n  from: '',\n  distance: '',\n  duration: '',\n  price: ''\n};\n\nfunction Paypal(props) {\n  _s();\n\n  const {\n    information,\n    total,\n    Change_Load_Order,\n    from,\n    distance,\n    duration,\n    price\n  } = props;\n  const paypal = useRef();\n  const [redirect, set_redirect] = useState(false);\n  const count_change = useSelector(state => state.Count.isLoad);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    window.paypal.Buttons({\n      createOrder: (data, actions, err) => {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: \"Hóa Đơn Đặt Hàng\",\n            amount: {\n              currency_code: \"USD\",\n              value: total\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        console.log(order);\n        Change_Load_Order(true);\n\n        if (localStorage.getItem(\"id_coupon\")) {\n          const responseUpdate = await CouponAPI.updateCoupon(localStorage.getItem(\"id_coupon\"));\n          console.log(responseUpdate);\n        } // data Note\n\n\n        const data_note = {\n          fullname: information.fullname,\n          phone: information.phone\n        }; // Xứ lý API Note\n\n        const response_Note = await NoteAPI.post_note(data_note); // data Order\n\n        const data_order = {\n          id_user: sessionStorage.getItem('id_user'),\n          address: information.address,\n          total: total,\n          status: '1',\n          pay: true,\n          id_payment: '60635313a1ba573dc01656b5',\n          id_note: response_Note._id,\n          feeship: price,\n          id_coupon: localStorage.getItem('id_coupon') ? localStorage.getItem('id_coupon') : '',\n          create_time: `${new Date().getDate()}/${parseInt(new Date().getMonth()) + 1}/${new Date().getFullYear()}`\n        }; // Xứ lý API Order\n\n        const response_order = await OrderAPI.post_order(data_order); // data carts\n\n        const data_carts = JSON.parse(localStorage.getItem('carts')); // Xử lý API Detail_Order\n\n        for (let i = 0; i < data_carts.length; i++) {\n          const data_detail_order = {\n            id_order: response_order._id,\n            id_product: data_carts[i].id_product,\n            name_product: data_carts[i].name_product,\n            price_product: data_carts[i].price_product,\n            count: data_carts[i].count,\n            size: data_carts[i].size\n          };\n          await Detail_OrderAPI.post_detail_order(data_detail_order);\n        } // data email\n        // const data_email = {\n        //     id_order: response_order._id,\n        //     total: total,\n        //     fullname: information.fullname,\n        //     phone: information.phone,\n        //     price: price,\n        //     address: information.address,\n        //     email: information.email\n        // }\n        // // Xử lý API Send Mail\n        // const send_mail = await OrderAPI.post_email(data_email)\n        // console.log(send_mail)\n\n\n        localStorage.removeItem('information');\n        localStorage.removeItem('total_price');\n        localStorage.removeItem('price');\n        localStorage.removeItem('id_coupon');\n        localStorage.removeItem('coupon');\n        localStorage.setItem('carts', JSON.stringify([]));\n        set_redirect(true); // Hàm này dùng để load lại phần header bằng Redux\n\n        const action_count_change = changeCount(count_change);\n        dispatch(action_count_change);\n      },\n      onError: err => {\n        console.log(\"Vui Lòng Kiểm Tra Lại Thông Tin\");\n      }\n    }).render(paypal.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paypal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Paypal, \"LB0yYaEekvJKuh4BdtVyxVxzm6E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Paypal;\nexport default Paypal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paypal\");","map":{"version":3,"sources":["D:/class/cnWeb/QLNH/client_app/src/Checkout/Paypal.jsx"],"names":["React","useEffect","useRef","useState","io","PropTypes","Redirect","OrderAPI","changeCount","useDispatch","useSelector","NoteAPI","Detail_OrderAPI","CouponAPI","socket","transports","jsonp","connect","Paypal","propTypes","information","object","total","number","Change_Load_Order","func","from","string","distance","duration","price","defaultProps","props","paypal","redirect","set_redirect","count_change","state","Count","isLoad","dispatch","window","Buttons","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","capture","console","log","localStorage","getItem","responseUpdate","updateCoupon","data_note","fullname","phone","response_Note","post_note","data_order","id_user","sessionStorage","address","status","pay","id_payment","id_note","_id","feeship","id_coupon","create_time","Date","getDate","parseInt","getMonth","getFullYear","response_order","post_order","data_carts","JSON","parse","i","length","data_detail_order","id_order","id_product","name_product","price_product","count","size","post_detail_order","removeItem","setItem","stringify","action_count_change","onError","render","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from \"socket.io-client\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom'\r\nimport OrderAPI from '../API/OrderAPI';\r\nimport { changeCount } from '../Redux/Action/ActionCount';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport NoteAPI from '../API/NoteAPI';\r\nimport Detail_OrderAPI from '../API/Detail_OrderAPI';\r\nimport CouponAPI from '../API/CouponAPI';\r\n\r\nconst socket = io('https://hieusuper20hcm.herokuapp.com/', {\r\n    transports: ['websocket'], jsonp: false\r\n});\r\nsocket.connect();\r\n\r\nPaypal.propTypes = {\r\n    information: PropTypes.object,\r\n    total: PropTypes.number,\r\n    Change_Load_Order: PropTypes.func,\r\n    from: PropTypes.string,\r\n    distance: PropTypes.string,\r\n    duration: PropTypes.string,\r\n    price: PropTypes.string,\r\n};\r\n\r\nPaypal.defaultProps = {\r\n    information: {},\r\n    total: 0,\r\n    Change_Load_Order: null,\r\n    from: '',\r\n    distance: '',\r\n    duration: '',\r\n    price: '',\r\n}\r\n\r\nfunction Paypal(props) {\r\n\r\n    const { information, total, Change_Load_Order, from, distance, duration, price } = props\r\n\r\n    const paypal = useRef()\r\n\r\n    const [redirect, set_redirect] = useState(false)\r\n\r\n    const count_change = useSelector(state => state.Count.isLoad)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        window.paypal.Buttons({\r\n            createOrder: (data, actions, err) => {\r\n                return actions.order.create({\r\n                    intent: \"CAPTURE\",\r\n                    purchase_units: [\r\n                        {\r\n                            description: \"Hóa Đơn Đặt Hàng\",\r\n                            amount: {\r\n                                currency_code: \"USD\",\r\n                                value: total,\r\n                            },\r\n                        },\r\n                    ],\r\n                })\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture();\r\n                console.log(order)\r\n\r\n                Change_Load_Order(true)\r\n\r\n                if (localStorage.getItem(\"id_coupon\")){\r\n\r\n                    const responseUpdate = await CouponAPI.updateCoupon(localStorage.getItem(\"id_coupon\"))\r\n                    console.log(responseUpdate)\r\n        \r\n                }\r\n\r\n                // data Note\r\n                const data_note = {\r\n                    fullname: information.fullname,\r\n                    phone: information.phone,\r\n                }\r\n\r\n                // Xứ lý API Note\r\n                const response_Note = await NoteAPI.post_note(data_note)\r\n\r\n                // data Order\r\n                const data_order = {\r\n                    id_user: sessionStorage.getItem('id_user'),\r\n                    address: information.address,\r\n                    total: total,\r\n                    status: '1',\r\n                    pay: true,\r\n                    id_payment: '60635313a1ba573dc01656b5',\r\n                    id_note: response_Note._id,\r\n                    feeship: price,\r\n                    id_coupon: localStorage.getItem('id_coupon') ? localStorage.getItem('id_coupon') : '',\r\n                    create_time: `${new Date().getDate()}/${parseInt(new Date().getMonth()) + 1}/${new Date().getFullYear()}`\r\n                }\r\n\r\n                // Xứ lý API Order\r\n                const response_order = await OrderAPI.post_order(data_order)\r\n\r\n                // data carts\r\n                const data_carts = JSON.parse(localStorage.getItem('carts'))\r\n\r\n                // Xử lý API Detail_Order\r\n                for (let i = 0; i < data_carts.length; i++) {\r\n\r\n                    const data_detail_order = {\r\n                        id_order: response_order._id,\r\n                        id_product: data_carts[i].id_product,\r\n                        name_product: data_carts[i].name_product,\r\n                        price_product: data_carts[i].price_product,\r\n                        count: data_carts[i].count,\r\n                        size: data_carts[i].size\r\n                    }\r\n\r\n                    await Detail_OrderAPI.post_detail_order(data_detail_order)\r\n\r\n                }\r\n\r\n                // data email\r\n                // const data_email = {\r\n                //     id_order: response_order._id,\r\n                //     total: total,\r\n                //     fullname: information.fullname,\r\n                //     phone: information.phone,\r\n                //     price: price,\r\n                //     address: information.address,\r\n                //     email: information.email\r\n                // }\r\n\r\n                // // Xử lý API Send Mail\r\n\r\n                // const send_mail = await OrderAPI.post_email(data_email)\r\n                // console.log(send_mail)\r\n                \r\n                localStorage.removeItem('information')\r\n                localStorage.removeItem('total_price')\r\n                localStorage.removeItem('price')\r\n                localStorage.removeItem('id_coupon')\r\n                localStorage.removeItem('coupon')\r\n                localStorage.setItem('carts', JSON.stringify([]))\r\n\r\n                set_redirect(true)\r\n\r\n                // Hàm này dùng để load lại phần header bằng Redux\r\n                const action_count_change = changeCount(count_change)\r\n                dispatch(action_count_change)\r\n\r\n            },\r\n            onError: (err) => {\r\n                console.log(\"Vui Lòng Kiểm Tra Lại Thông Tin\")\r\n            }\r\n        }).render(paypal.current)\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                redirect && <Redirect to=\"/success\" />\r\n            }\r\n            <div ref={paypal}>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Paypal;"]},"metadata":{},"sourceType":"module"}