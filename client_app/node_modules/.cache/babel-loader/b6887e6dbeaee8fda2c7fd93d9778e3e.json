{"ast":null,"code":"// api/axiosClient.js\nimport axios from 'axios';\nimport queryString from 'query-string'; // Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#requestconfig` for the full list of configs\n\nconst axiosClient = axios.create({\n  baseURL: 'http://localhost:8000',\n  headers: {\n    'content-type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  },\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClient.interceptors.request.use(async config => {\n  // Handle token here ...\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n}, error => {\n  // Handle errors\n  throw error;\n});\nexport default axiosClient;","map":{"version":3,"sources":["D:/CNWEB/QLNH/HALD_app/src/API/axiosClient.jsx"],"names":["axios","queryString","axiosClient","create","baseURL","headers","paramsSerializer","params","stringify","interceptors","request","use","config","response","data","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CACA;AACA;;AACA,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE,uBADoB;AAE7BC,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAEL,mCAA+B;AAF1B,GAFoB;AAM7BC,EAAAA,gBAAgB,EAAEC,MAAM,IAAIN,WAAW,CAACO,SAAZ,CAAsBD,MAAtB;AANC,CAAb,CAApB;AAQAL,WAAW,CAACO,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,MAAOC,MAAP,IAAkB;AACnD;AACA,SAAOA,MAAP;AACH,CAHD;AAIAV,WAAW,CAACO,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CAAuCE,QAAD,IAAc;AAChD,MAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC3B,WAAOD,QAAQ,CAACC,IAAhB;AACH;;AACD,SAAOD,QAAP;AACH,CALD,EAKIE,KAAD,IAAW;AACV;AACA,QAAMA,KAAN;AACH,CARD;AASA,eAAeb,WAAf","sourcesContent":["// api/axiosClient.js\nimport axios from 'axios';\nimport queryString from 'query-string';\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#requestconfig` for the full list of configs\nconst axiosClient = axios.create({\n    baseURL: 'http://localhost:8000',\n    headers: {\n        'content-type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n    },\n    paramsSerializer: params => queryString.stringify(params),\n});\naxiosClient.interceptors.request.use(async (config) => {\n    // Handle token here ...\n    return config;\n})\naxiosClient.interceptors.response.use((response) => {\n    if (response && response.data) {\n        return response.data;\n    }\n    return response;\n}, (error) => {\n    // Handle errors\n    throw error;\n});\nexport default axiosClient;"]},"metadata":{},"sourceType":"module"}